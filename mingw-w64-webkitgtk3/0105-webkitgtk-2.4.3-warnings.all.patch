--- a/Source/JavaScriptCore/runtime/JSObject.cpp
+++ b/Source/JavaScriptCore/runtime/JSObject.cpp
@@ -819,7 +819,7 @@ ContiguousJSValues JSObject::genericConvertDoubleToContiguous(VM& vm)
             currentAsValue->clear();
             continue;
         }
-        JSValue v;
+        JSValue v = jsNumber(value);
         switch (mode) {
         case EncodeValueAsDouble:
             v = JSValue(JSValue::EncodeAsDouble, value);
--- a/Source/ThirdParty/ANGLE/src/compiler/ParseContext.cpp
+++ b/Source/ThirdParty/ANGLE/src/compiler/ParseContext.cpp
@@ -535,7 +535,7 @@ bool TParseContext::constructorErrorCheck(const TSourceLoc& line, TIntermNode* n
         return true;
     }
     
-    if (op == EOpConstructStruct && !type->isArray() && int(type->getStruct()->fields().size()) != function.getParamCount()) {
+    if (op == EOpConstructStruct && !type->isArray() && int(type->getStruct()->fields().size()) != int(function.getParamCount())) {
         error(line, "Number of constructor parameters does not match the number of structure fields", "constructor");
         return true;
     }
--- a/Source/ThirdParty/ANGLE/src/compiler/depgraph/DependencyGraph.cpp
+++ b/Source/ThirdParty/ANGLE/src/compiler/depgraph/DependencyGraph.cpp
@@ -4,7 +4,9 @@
 // found in the LICENSE file.
 //
 
+#ifdef _MSC_VER
 #pragma warning(disable: 4718)
+#endif
 
 #include "compiler/depgraph/DependencyGraph.h"
 #include "compiler/depgraph/DependencyGraphBuilder.h"
--- a/Source/WTF/wtf/text/WTFString.h
+++ b/Source/WTF/wtf/text/WTFString.h
@@ -32,6 +32,9 @@
 #include <objc/objc.h>
 #endif
 
+/* avoid renaming to libintl_printf (see WTF_ATTRIBUTE_PRINTF) */
+#undef printf
+
 namespace WTF {
 
 class CString;
--- a/Source/autotools/ltmain.sh
+++ b/Source/autotools/ltmain.sh
@@ -4178,7 +4178,7 @@ EOF
 /* declarations of non-ANSI functions */
 #if defined(__MINGW32__)
 # ifdef __STRICT_ANSI__
-int _putenv (const char *);
+int __declspec(dllimport) _putenv (const char *);
 # endif
 #elif defined(__CYGWIN__)
 # ifdef __STRICT_ANSI__
