--- webkitgtk-2.4.1.old/Source/WTF/wtf/MathExtras.h	2014-05-16 19:07:53 +0000
+++ webkitgtk-2.4.1/Source/WTF/wtf/MathExtras.h	2014-05-17 07:38:01 +0000
@@ -67,6 +67,12 @@ const double piOverFourDouble = M_PI_4;
 const float piOverFourFloat = static_cast<float>(M_PI_4);
 #endif
 
+#ifndef M_SQRT2
+const double sqrtOfTwoDouble = 1.41421356237309504880;
+#else
+const double sqrtOfTwoDouble = M_SQRT2;
+#endif
+
 #if OS(DARWIN)
 
 // Work around a bug in the Mac OS X libc where ceil(-0.1) return +0.
--- webkitgtk-2.4.1.old/Source/WebCore/platform/graphics/freetype/FontPlatformDataFreeType.cpp	2014-05-16 19:07:53 +0000
+++ webkitgtk-2.4.1/Source/WebCore/platform/graphics/freetype/FontPlatformDataFreeType.cpp	2014-05-17 07:38:01 +0000
@@ -32,6 +32,7 @@
 #include <ft2build.h>
 #include FT_TRUETYPE_TABLES_H
 #include <wtf/text/WTFString.h>
+#include <wtf/MathExtras.h>
 
 #if !PLATFORM(EFL)
 #include <gdk/gdk.h>
@@ -120,7 +121,7 @@ static void rotateCairoMatrixForVertical
     // combination of rotation (R) and translation (T) applied on the
     // horizontal matrix (H). V = H . R . T, where R rotates by -90 degrees
     // and T translates by font size towards y axis.
-    cairo_matrix_rotate(matrix, -M_PI_2);
+    cairo_matrix_rotate(matrix, -piOverTwoDouble);
     cairo_matrix_translate(matrix, 0.0, 1.0);
 }
 
--- webkitgtk-2.4.1.old/Source/WebCore/rendering/mathml/RenderMathMLMenclose.cpp	2014-05-16 19:07:53 +0000
+++ webkitgtk-2.4.1/Source/WebCore/rendering/mathml/RenderMathMLMenclose.cpp	2014-05-17 07:38:01 +0000
@@ -71,8 +71,8 @@ void RenderMathMLMenclose::computePrefer
     size_t notationalValueSize = notationValues.size();
     for (size_t i = 0; i < notationalValueSize; i++) {
         if (notationValues[i] == "circle") {
-            m_minPreferredLogicalWidth = minPreferredLogicalWidth() * float(M_SQRT2);
-            m_maxPreferredLogicalWidth = maxPreferredLogicalWidth() * float(M_SQRT2);
+            m_minPreferredLogicalWidth = minPreferredLogicalWidth() * float(sqrtOfTwoDouble);
+            m_maxPreferredLogicalWidth = maxPreferredLogicalWidth() * float(sqrtOfTwoDouble);
         }
     }
 
@@ -86,7 +86,7 @@ void RenderMathMLMenclose::updateLogical
     size_t notationalValueSize = notationValues.size();
     for (size_t i = 0; i < notationalValueSize; i++)
         if (notationValues[i] == "circle")
-            setLogicalHeight(logicalHeight() * float(M_SQRT2));
+            setLogicalHeight(logicalHeight() * float(sqrtOfTwoDouble));
 }
 
 void RenderMathMLMenclose::paint(PaintInfo& info, const LayoutPoint& paintOffset)
