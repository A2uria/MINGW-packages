From 8a9ac7f208f38fb89eb5032ddc68055e6ab98f99 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 23 Feb 2015 22:12:15 +0000
Subject: [PATCH 2/5] options: Fix ordering problems with --color

Moved around the logic of setting opts.color so that:

1. If the user explicitly requests or disables it, then
   that is respected.

2. Automatic disabling of color doesn't happen for FIFOs
   on Windows since mintty.exe console handles are pipes.

3. The old location of the isatty check meant that if the
   user specified --color, then group would get set to 0,
   color would be TRUE and the output would not show any
   filenames at all.

4. Default color to TRUE if MSYSCON env. var = mintty.exe
---
 configure.ac  |   2 +-
 src/options.c | 137 +++++++++++++++++++++++++++++++++++-----------------------
 src/options.h |  10 +++++
 3 files changed, 95 insertions(+), 54 deletions(-)

diff --git a/configure.ac b/configure.ac
index 7116788..e29d1c4 100644
--- a/configure.ac
+++ b/configure.ac
@@ -24,7 +24,7 @@ AX_PTHREAD(
 )
 
 # Run CFLAGS="-pg" ./configure if you want debug symbols
-CFLAGS="$CFLAGS $PTHREAD_CFLAGS $PCRE_CFLAGS -Wall -Wextra -Wformat=2 -Wno-format-nonliteral -Wshadow -Wpointer-arith -Wcast-qual -Wmissing-prototypes -Wno-missing-braces -std=gnu89 -D_GNU_SOURCE -O2"
+CFLAGS="$CFLAGS $PTHREAD_CFLAGS $PCRE_CFLAGS -Wall -Wextra -Wformat=2 -Wno-format-nonliteral -Wshadow -Wpointer-arith -Wcast-qual -Wmissing-prototypes -Wno-missing-braces -std=gnu89 -D_GNU_SOURCE -O0"
 LDFLAGS="$LDFLAGS"
 
 case $host in
diff --git a/src/options.c b/src/options.c
index 462894b..e2a93b2 100644
--- a/src/options.c
+++ b/src/options.c
@@ -113,9 +113,12 @@ void init_options(void) {
     memset(&opts, 0, sizeof(opts));
     opts.casing = CASE_DEFAULT;
 #ifdef _WIN32
-    opts.color = (getenv("ANSICON") || getenv("CMDER_ROOT")) ? TRUE : FALSE;
+    const char* env_MSYSCON = getenv("MSYSCON");
+    opts.color =  ((getenv("ANSICON") || getenv("CMDER_ROOT")
+                 || (env_MSYSCON && !strcmp(env_MSYSCON, "mintty.exe"))))
+                  ? COLOR_DEFAULT_TRUE : COLOR_DEFAULT_FALSE;
 #else
-    opts.color = TRUE;
+    opts.color = COLOR_DEFAULT_TRUE;
 #endif
     opts.max_matches_per_file = 0;
     opts.max_search_depth = DEFAULT_MAX_SEARCH_DEPTH;
@@ -199,7 +202,7 @@ void parse_options(int argc, char **argv, char **base_paths[], char **paths[]) {
         { "before", optional_argument, NULL, 'B' },
         { "break", no_argument, &opts.print_break, 1 },
         { "case-sensitive", no_argument, NULL, 's' },
-        { "color", no_argument, &opts.color, 1 },
+        { "color", no_argument, &opts.color, COLOR_EXPLICIT_TRUE },
         { "color-line-number", required_argument, NULL, 0 },
         { "color-match", required_argument, NULL, 0 },
         { "color-path", required_argument, NULL, 0 },
@@ -233,7 +236,7 @@ void parse_options(int argc, char **argv, char **base_paths[], char **paths[]) {
         { "no-recurse", no_argument, NULL, 'n' },
         { "noaffinity", no_argument, &opts.use_thread_affinity, 0 },
         { "nobreak", no_argument, &opts.print_break, 0 },
-        { "nocolor", no_argument, &opts.color, 0 },
+        { "nocolor", no_argument, &opts.color, COLOR_EXPLICIT_FALSE },
         { "nofilename", no_argument, NULL, 0 },
         { "nofollow", no_argument, &opts.follow_symlinks, 0 },
         { "nogroup", no_argument, &group, 0 },
@@ -295,22 +298,6 @@ void parse_options(int argc, char **argv, char **base_paths[], char **paths[]) {
         }
     }
 
-    /* If we're not outputting to a terminal. change output to:
-        * turn off colors
-        * print filenames on every line
-     */
-    if (!isatty(fileno(stdout))) {
-        opts.color = 0;
-        group = 0;
-
-        /* Don't search the file that stdout is redirected to */
-        rv = fstat(fileno(stdout), &statbuf);
-        if (rv != 0) {
-            die("Error fstat()ing stdout");
-        }
-        opts.stdout_inode = statbuf.st_ino;
-    }
-
     int pcre_opts = 0;
     while ((ch = getopt_long(argc, argv, "A:aB:C:cDG:g:FfHhiLlm:nop:QRrSsvVtuUwz0", longopts, &opt_index)) != -1) {
         switch (ch) {
@@ -612,44 +599,11 @@ void parse_options(int argc, char **argv, char **base_paths[], char **paths[]) {
         opts.after = opts.context;
     }
 
-    if (opts.ackmate) {
-        opts.color = 0;
-        opts.print_break = 1;
-        group = 1;
-        opts.search_stream = 0;
-    }
 
-    if (opts.vimgrep) {
-        opts.color = 0;
-        opts.print_break = 0;
-        group = 1;
-        opts.search_stream = 0;
-        opts.print_path = PATH_PRINT_NOTHING;
-    }
 
-    if (opts.parallel) {
-        opts.search_stream = 0;
-    }
 
-    if (opts.print_path != PATH_PRINT_DEFAULT || opts.print_break == 0) {
-        goto skip_group;
-    }
 
-    if (group) {
-        opts.print_break = 1;
-    } else {
-        opts.print_path = PATH_PRINT_DEFAULT_EACH_LINE;
-        opts.print_break = 0;
-    }
 
-skip_group:
-    if (opts.search_stream) {
-        opts.print_break = 0;
-        opts.print_path = PATH_PRINT_NOTHING;
-        if (opts.print_line_numbers != 2) {
-            opts.print_line_numbers = 0;
-        }
-    }
 
     if (accepts_query && argc > 0) {
         // use the provided query
@@ -703,4 +657,81 @@ skip_group:
     }
     (*paths)[i] = NULL;
     (*base_paths)[i] = NULL;
+
+    /* If we're not outputting to a terminal. change output to:
+        * turn off colors
+        * print filenames on every line
+     */
+    if (!isatty(fileno(stdout))) {
+        /* Don't search the file that stdout is redirected to */
+        rv = fstat(fileno(stdout), &statbuf);
+        if (rv != 0) {
+            die("Error fstat()ing stdout");
+        }
+        opts.stdout_inode = statbuf.st_ino;
+        /* Assume the user knows best */
+        if (opts.color != COLOR_EXPLICIT_TRUE) {
+         /* On Windows redirection to regular file *can* br detected via
+            statbuf.st_mode & S_IFREG (while statbuf.st_ino is always 0) */
+            if (statbuf.st_ino != 0
+             || statbuf.st_mode & S_IFREG
+#if !defined(_WIN32)
+                /* On Windows bash.exe pipes cannot be distinguished from cmd.exe
+                   pipes or mintty.exe console output (statbuf.st_mode & S_IFIFO)
+                   so its best not to disable color output here. */
+             || statbuf.st_mode & S_IFIFO
+#endif
+            ) {
+                opts.color = COLOR_DEFAULT_FALSE;
+                group = 0;
+            }
+        }
+    }
+
+
+    if (opts.ackmate) {
+        opts.color = COLOR_EMULATION_FALSE;
+        opts.print_break = 1;
+        group = 1;
+        opts.search_stream = 0;
+    }
+
+    if (opts.vimgrep) {
+        opts.color = COLOR_EMULATION_FALSE;
+        opts.print_break = 0;
+        group = 1;
+        opts.search_stream = 0;
+        opts.print_path = PATH_PRINT_NOTHING;
+    }
+
+    if (opts.color == COLOR_DEFAULT_FALSE || opts.color == COLOR_EXPLICIT_FALSE ||
+        opts.color == COLOR_EMULATION_FALSE) {
+        opts.color = COLOR_FALSE;
+    } else {
+        opts.color = COLOR_TRUE;
+    }
+
+    if (opts.parallel) {
+        opts.search_stream = 0;
+    }
+
+    if (opts.print_path != PATH_PRINT_DEFAULT || opts.print_break == 0) {
+        goto skip_group;
+    }
+
+    if (group) {
+        opts.print_break = 1;
+    } else {
+        opts.print_path = PATH_PRINT_DEFAULT_EACH_LINE;
+        opts.print_break = 0;
+    }
+
+skip_group:
+    if (opts.search_stream) {
+        opts.print_break = 0;
+        opts.print_path = PATH_PRINT_NOTHING;
+        if (opts.print_line_numbers != 2) {
+            opts.print_line_numbers = 0;
+        }
+    }
 }
diff --git a/src/options.h b/src/options.h
index c7d419f..758f6a0 100644
--- a/src/options.h
+++ b/src/options.h
@@ -26,6 +26,16 @@ enum path_print_behavior {
     PATH_PRINT_NOTHING
 };
 
+enum color_behaviour {
+    COLOR_FALSE = 0,
+    COLOR_TRUE = 1,
+    COLOR_DEFAULT_FALSE,
+    COLOR_DEFAULT_TRUE,
+    COLOR_EXPLICIT_FALSE,
+    COLOR_EXPLICIT_TRUE,
+    COLOR_EMULATION_FALSE,
+};
+
 typedef struct {
     int ackmate;
     pcre *ackmate_dir_filter;
-- 
2.3.0

