# Maintainer: Renato Silva <br.renatosilva@gmail.com>

_realname='nsis'
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.0b3
pkgrel=1
url='http://nsis.sourceforge.net'
pkgdesc='Windows installer development tool (mingw-w64)'
license=(ZLIB)
arch=(any)
depends=(${MINGW_PACKAGE_PREFIX}-zlib
         ${MINGW_PACKAGE_PREFIX}-gcc-libs
         ${MINGW_PACKAGE_PREFIX}-libwinpthread)
makedepends=(${MINGW_PACKAGE_PREFIX}-gcc
             'scons>=2.3.4-3')
source=("https://sourceforge.net/projects/nsis/files/NSIS%203%20Pre-release/${pkgver}/nsis-${pkgver}-src.tar.bz2"
        001-fhs-directory-structure.patch
        002-compile-fixes.patch
        003-remove-redundant-architecture-suffix.patch)
sha256sums=('faf22d6cd4bd46780afcf22524a1de39bcc38c85773719ec7a1ecf002e308d3a'
            'ff4d41f30ee48072e18b0f8e349c33286290574bf8779ef21c15cc1754f70949'
            '4bbdee2e7451fce218b68e127da9d34d911dd71a405850b021bf59eff41b2a91'
            'bad0696d1aaa7bcf927f06fd476d3c3404ebf12b63981e345f075e5f157131ef')

# Circumvent problem where makepkg will add the exe extension to some files
# when compressing the 64-bit package
options=('!strip')

prepare() {
    cd "${srcdir}/${_realname}-${pkgver}-src"
    patch -p1 < "${startdir}"/001-fhs-directory-structure.patch
    patch -p1 < "${startdir}"/002-compile-fixes.patch
    patch -p1 < "${startdir}"/003-remove-redundant-architecture-suffix.patch
}

_build() {
    local target_arch="${CARCH/i686/x86}"
    target_arch="${target_arch/x86_64/amd64}"
    cd "${srcdir}/build-${CARCH}-${_realname}-${pkgver}"
    scons \
        TARGET_ARCH="${target_arch}" \
        PREFIX="${MINGW_PREFIX}" \
        VERSION="${pkgver}" \
        UNICODE='yes' \
        NSIS_MAX_STRLEN='8192' \
        NSIS_CONFIG_CONST_DATA_PATH='no' \
        SKIPUTILS='NSIS Menu,SubStart' \
        PREFIX_DEST="${PREFIX_DEST}" \
        ${target}
}

build() {
    msg2 'Synchronizing build directory'
    rsync --recursive --times "${srcdir}/${_realname}-${pkgver}-src"/* "${srcdir}/build-${CARCH}-${_realname}-${pkgver}"
    _build
}

package() {
    PREFIX_DEST="${pkgdir}" target='install' _build
    install -Dm644 "${pkgdir}${MINGW_PREFIX}/share/doc/nsis/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
    rm "${pkgdir}${MINGW_PREFIX}/share/doc/nsis/COPYING"
}
