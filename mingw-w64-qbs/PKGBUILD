# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

# The patches for this package are developed inside the -git package.
# This is for three reasons:
# 1. Upstreaming is easier.
# 2. The Qt devs often forget to release Qbs at the same time as Qt Creator.
# 3. Commit messages are retained (though efforts are made for that via git init)

# TODO :: Patch this for clang support:
#         qbs setup-toolchains --type clang /mingw64/bin/clang.exe clang
#         .. will add a profile to %AppData%/QtProject/qbs.ini that contains:
#         qt-project\qbs\profiles\clang\qbs\toolchain=clang, llvm, gcc
#         .. but is missing:
#         qt-project\qbs\profiles\clang\qbs\targetOS=windows
#         then in share/qbs/modules/cpp/windows-mingw.qbs we need to change
#         condition: qbs.targetOS.contains("windows") && qbs.toolchain.contains("mingw")
#         .. to:
#         condition: qbs.targetOS.contains("windows") \
#               && (qbs.toolchain.contains("mingw") || qbs.toolchain.contains("gcc"))

_realname=qbs
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.4.0
pkgrel=2
_pkgfqn="${_realname}-${pkgver}.src"
pkgdesc='Qt Build Suite'
url='http://qt-project.org'
arch=('any')
depends=("${MINGW_PACKAGE_PREFIX}-qt5")
makedepends=("git")
options=('docs' 'staticlibs') # '!strip' 'debug')
source=("http://download.qt-project.org/official_releases/qbs/${pkgver}/${_pkgfqn}.tar.gz"
        #${_realname}-${pkgver}::"git://gitorious.org/qt-labs/qbs.git#tag=v$pkgver"
        "manifest"
        "0001-add-hostosinfo.h-to-installed-headers.1.4.patch"
        "0002-WIP-Xcode-generator.1.4.patch"
        "0003-add-generator-header-installs.1.4.patch"
        "0004-Use-.dll.a-instead-of-.a-for-mingw-import-librar.1.4.patch"
        "0005-setup-toolchains-Pretend-msys-is-mingw.1.4.patch"
        "0006-Add-some-missing-files.1.4.patch"
        "0007-add-commandechomode.h-to-installed-headers.1.4.patch"
        "0008-add-many-files-to-installed-headers.1.4.patch"
        "0009-Disable-WIP-Xcode-generator.1.4.patch")
sha256sums=('d384d0368c3e32ab3bdd9d85c96bb037aa1f650e77326ab5cd400a38cfef33f3'
            '838098b25a8044176b3139b4003594570c62a8d64f5470fbbd769f3bf44e0855'
            '55a48d077aa3f2274639cba2d4ad99f85db2351b22c8b307535b1c6df6daf594'
            '7874ddf89d788d2bfef6ddc97956638df1389300c82132af680aa4268c6b52b6'
            '12a4efc62b04ca4b157f3154589b7516d5a650388dc30eec8b107c6a087f0b81'
            '6daa43c65e4ac440470687a31c74ab6d4bdcfa0fb3c195678e62a9f800356b1a'
            '5002df9cb3ad3451db92918a4b74bb05237648d8697faf8894d96b51cb7faa8a'
            '40d53fca4e80ab63baa8649bae43882daf2c91de22412c71dec712ac59f4a39e'
            'df453adffd85dfdefef285a2594da9d83ad22eaeddcf2f3f13fb66cbd32bfd32'
            '10adad688e6c3222df7264d5946ba5231cb980d620ccf4393f76d1fd97b3a23f'
            'ef46ff74aac8aa267a8397d4c02a9481554c45f41748ef8b04ac7ef152d52f22')

prepare() {
  cd ${_realname}-${pkgver}
  [ -d src/plugins/generator ] && rm -rf src/plugins/generator
  rm -rf src/lib/corelib/api/generator.*
  rm -rf src/lib/corelib/tools/generat*
  if [ -d .git ]; then
    git reset --hard $(git rev-list --max-parents=0 --abbrev-commit HEAD)
  else
    git init .
    git add -A
    git commit -m "Initial git import"
  fi
  git am "${srcdir}"/0001-add-hostosinfo.h-to-installed-headers.1.4.patch
  git am "${srcdir}"/0002-WIP-Xcode-generator.1.4.patch
  git am "${srcdir}"/0003-add-generator-header-installs.1.4.patch
  git am "${srcdir}"/0004-Use-.dll.a-instead-of-.a-for-mingw-import-librar.1.4.patch
  git am "${srcdir}"/0005-setup-toolchains-Pretend-msys-is-mingw.1.4.patch
  git am "${srcdir}"/0006-Add-some-missing-files.1.4.patch
  git am "${srcdir}"/0007-add-commandechomode.h-to-installed-headers.1.4.patch
  git am "${srcdir}"/0008-add-many-files-to-installed-headers.1.4.patch
  git am "${srcdir}"/0009-Disable-WIP-Xcode-generator.1.4.patch
}

build() {
local _config
if check_option "debug" "n"; then
  _config="release"
else
  _config="debug"
fi
  cd ${srcdir}/${_realname}-${pkgver}
  [ -d build-${CARCH} ] && rm -rf build-${CARCH}
  mkdir build-${CARCH}
  cd build-${CARCH}
  ${MINGW_PREFIX}/bin/qmake.exe ../qbs.pro \
    CONFIG+=${_config} \
    CONFIG+=qbs_enable_project_file_updates
  # Because xcodeprojectgenerator has a build order problem.
  make -j1
  make docs
}

package() {
  cd ${srcdir}/${_realname}-${pkgver}/build-${CARCH}
  make INSTALL_ROOT=${pkgdir}${MINGW_PREFIX} install
  make INSTALL_ROOT=${pkgdir}${MINGW_PREFIX} install_docs

  rm -f ${pkgdir}${MINGW_PREFIX}/lib/*.dll

  for file in qbs-setup-madde-platforms qbs-setup-qt; do
    cp ${srcdir}/manifest ${pkgdir}${MINGW_PREFIX}/bin/${file}.exe.manifest
  done
}

