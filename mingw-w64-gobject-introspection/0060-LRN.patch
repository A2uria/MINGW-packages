@@ -, +, @@ 
 =?UTF-8?q?=D1=83=D0=BB=D0=B0=D1=82=D0=BE=D0=B2?= <lrn1986@gmail.com>
 Makefile-gir.am               |  2 +-
 Makefile-giscanner.am         |  5 +++++
 Makefile-tools.am             | 14 ++++++++++++--
 Makefile.am                   | 17 +++++++++--------
 Makefile.introspection        |  2 +-
 common.mk                     |  2 +-
 giscanner/scannermain.py      |  4 ++--
 giscanner/utils.py            | 33 ++++++++++++++++++++++++++++++++-
 misc/g-ir-scanner-w32-wrapper | 37 +++++++++++++++++++++++++++++++++++++
 tools/g-ir-scanner.in         |  2 +-
 10 files changed, 101 insertions(+), 17 deletions(-)
 create mode 100644 misc/g-ir-scanner-w32-wrapper
--- a/Makefile-gir.am	
+++ a/Makefile-gir.am	
@@ -87,7 +87,7 @@ endif
 
 BUILT_GIRSOURCES += GLib-2.0.gir
 
-GLib-2.0.gir: g-ir-scanner g-ir-compiler$(EXEEXT)
+GLib-2.0.gir: g-ir-scanner-build g-ir-compiler$(EXEEXT)
 
 gir/DBusGLib-1.0.typelib: GObject-2.0.gir
 
--- a/Makefile-giscanner.am	
+++ a/Makefile-giscanner.am	
@@ -129,3 +129,8 @@ _giscanner_la_LDFLAGS += \
 endif
 
 _giscanner_la_SOURCES = giscanner/giscannermodule.c
+
+if OS_WIN32
+wrapperdir = $(pkglibdir)
+wrapper_SCRIPTS = misc/g-ir-scanner-w32-wrapper
+endif
--- a/Makefile-tools.am	
+++ a/Makefile-tools.am	
@@ -10,7 +10,12 @@ EXTRA_DIST += 				\
 	tools/g-ir-annotation-tool.in	\
 	tools/g-ir-doc-tool.in
 
-TOOL_SUBSTITUTIONS = sed -e s,@libdir\@,$(libdir), -e s,@datarootdir\@,$(datarootdir), -e s,@PYTHON\@,$(PYTHON),
+TOOL_SUBSTITUTIONS = sed -e s,@libdir\@,$(libdir), -e s,@datarootdir\@,$(datarootdir), -e s,@PYTHON\@,$(PYTHON), -e "s,@G_IR_SCANNER_W32_WRAPPER\@,$(G_IR_SCANNER_W32_WRAPPER),"
+if OS_WIN32
+TOOL_SUBSTITUTIONS_BUILD = sed -e s,@libdir\@,$(libdir), -e s,@datarootdir\@,$(datarootdir), -e s,@PYTHON\@,$(PYTHON), -e "s,@G_IR_SCANNER_W32_WRAPPER\@,$(abs_top_srcdir)/misc/g-ir-scanner-w32-wrapper ,"
+else
+TOOL_SUBSTITUTIONS_BUILD = sed -e s,@libdir\@,$(libdir), -e s,@datarootdir\@,$(datarootdir), -e s,@PYTHON\@,$(PYTHON), -e s,@G_IR_SCANNER_W32_WRAPPER\@,,
+endif
 
 g-ir-scanner: tools/g-ir-scanner.in _giscanner.la Makefile
 	$(AM_V_GEN) $(TOOL_SUBSTITUTIONS) $< > $@.tmp && mv $@.tmp $@
@@ -24,6 +29,11 @@ g-ir-doc-tool: tools/g-ir-doc-tool.in _giscanner.la Makefile
 	$(AM_V_GEN) $(TOOL_SUBSTITUTIONS) $< > $@.tmp && mv $@.tmp $@
 	@chmod a+x $@
 
+g-ir-scanner-build: tools/g-ir-scanner.in _giscanner.la Makefile
+	$(AM_V_GEN) $(TOOL_SUBSTITUTIONS_BUILD) $< > $@.tmp && mv $@.tmp $@
+	@chmod a+x $@
+	@chmod a+x $(top_srcdir)/misc/g-ir-scanner-w32-wrapper
+
 g_ir_compiler_SOURCES = tools/compiler.c
 g_ir_compiler_CPPFLAGS = -DGIREPO_DEFAULT_SEARCH_PATH="\"$(libdir)\"" \
 			 -I$(top_srcdir)/girepository
@@ -46,4 +56,4 @@ GCOVSOURCES =					\
 	$(g_ir_compiler_SOURCES)		\
 	$(g_ir_generate_SOURCES)
 
-CLEANFILES += g-ir-scanner g-ir-annotation-tool g-ir-doc-tool
+CLEANFILES += g-ir-scanner g-ir-scanner-build g-ir-annotation-tool g-ir-doc-tool
--- a/Makefile.am	
+++ a/Makefile.am	
@@ -47,14 +47,15 @@ m4_DATA = m4/introspection.m4
 makedir = $(datadir)/gobject-introspection-1.0
 dist_make_DATA = Makefile.introspection
 
-EXTRA_DIST += 			\
-	COPYING.LGPL		\
-	COPYING.GPL		\
-	CONTRIBUTORS		\
-	$(pkgconfig_DATA)	\
-	$(man_MANS)		\
-	$(m4_DATA)		\
-	misc/pep8.py		\
+EXTRA_DIST += 				\
+	COPYING.LGPL			\
+	COPYING.GPL			\
+	CONTRIBUTORS			\
+	$(pkgconfig_DATA)		\
+	$(man_MANS)			\
+	$(m4_DATA)			\
+	misc/g-ir-scanner-w32-wrapper	\
+	misc/pep8.py			\
 	misc/pyflakes.py
 
 # Default pep8.py --exclude + emacs backup files
--- a/Makefile.introspection	
+++ a/Makefile.introspection	
@@ -146,7 +146,7 @@ $(1): $$($(_gir_name)_FILES)
 	  $($(_gir_name)_CFLAGS) \
 	  --cflags-end \
 	  $($(_gir_name)_LDFLAGS) \
-	  $$^ \
+	  --files-begin $$^ \
 	  --output $(1)
 endef
 
--- a/common.mk	
+++ a/common.mk	
@@ -13,7 +13,7 @@ INTROSPECTION_SCANNER = \
         PYTHONPATH=$(top_builddir):$(top_srcdir) \
         UNINSTALLED_INTROSPECTION_SRCDIR=$(top_srcdir) \
         UNINSTALLED_INTROSPECTION_BUILDDIR=$(top_builddir) \
-        $(top_builddir)/g-ir-scanner
+        $(top_builddir)/g-ir-scanner-build
 
 INTROSPECTION_SCANNER_ARGS = \
     --verbose \
--- a/giscanner/scannermain.py	
+++ a/giscanner/scannermain.py	
@@ -468,10 +468,10 @@ def write_output(data, options):
     except IOError as e:
         _error("while writing output: %s" % (e.strerror, ))
 
-
 def scanner_main(args):
+    loaded_args = utils.maybe_load_args_from_file(args)
     parser = _get_option_parser()
-    (options, args) = parser.parse_args(args)
+    (options, args) = parser.parse_args(loaded_args)
 
     if options.passthrough_gir:
         passthrough_gir(options.passthrough_gir, sys.stdout)
--- a/giscanner/utils.py	
+++ a/giscanner/utils.py	
@@ -22,7 +22,7 @@ import re
 import os
 import subprocess
 import platform
-
+import shlex
 
 _debugflags = None
 
@@ -75,6 +75,37 @@ def to_underscores_noprefix(name):
     return name
 
 
+def load_args_from_file(filename):
+    with open(filename, 'rb') as source:
+        return shlex.split(source.read())
+
+def maybe_load_args_from_file(args):
+    processed_args = []
+    skip = False
+    is_input_file = False
+    argfilelen = len('--argfile=')
+    for argn, arg in enumerate(args):
+        if skip:
+            processed_args.append(arg)
+            continue
+        elif arg == '--':
+            skip = True
+            processed_args.append(arg)
+            continue
+        if is_input_file:
+            processed_args.extend(load_args_from_file(arg))
+            is_input_file = False
+            continue
+        if arg == '--argfile' and argn + 1 < len(args):
+            is_input_file = True
+            continue
+        elif arg.startswith('--argfile=') and len(arg) > argfilelen:
+            processed_args.extend(load_args_from_file(arg[argfilelen:]))
+            continue
+        processed_args.append(arg)
+    return processed_args
+
+
 _libtool_pat = re.compile("dlname='([A-z0-9\.\-\+]+)'\n")
 
 
--- a/misc/g-ir-scanner-w32-wrapper	
+++ a/misc/g-ir-scanner-w32-wrapper	
@@ -0,0 +1,37 @@ 
+#!/bin/sh
+# This script is a w32 wrapper for g-ir-scanner,
+# it will put all arguments after "--files-begin" into a tempfile
+# and replace them with --argfile <tempfile> before invoking g-ir-scanner
+
+new_args=
+while (( "$#" )); do
+    if test "x$1" == "x--files-begin"
+    then
+        shift
+        break
+    else
+        echo "$1" | grep -e '[^\] ' &>/dev/null
+        space_check=$?
+        if test "x$space_check" == "x0"
+        then
+            new_args="$new_args \"$1\""
+        else
+            new_args="$new_args $1"
+        fi
+    fi
+    shift
+done
+
+argfile=$(mktemp)
+for x in $*
+do
+    # this is more compatible (if slower) than calling cygpath
+    dosedx=$(cmd //C echo $x)
+    echo -n "$dosedx " >>$argfile
+done
+
+$new_args --argfile $argfile
+result=$?
+rm -f $argfile
+
+exit $result
--- a/tools/g-ir-scanner.in	
+++ a/tools/g-ir-scanner.in	
@@ -1,4 +1,4 @@ 
-#!@PYTHON@
+#!@G_IR_SCANNER_W32_WRAPPER@@PYTHON@
 # -*- Mode: Python -*-
 # GObject-Introspection - a framework for introspecting GObject libraries
 # Copyright (C) 2008  Johan Dahlin
